#library "Global"
#import "DEFINITIONS.acs"
#include "zcommon.acs"
#import "STATES.acs"
#import "FUNCTION.acs"

int pteam[MAXPLAYERS];
int NumPlayers = 0;

/*
		 			TID ASSIGNMENTS

		 1000-1063 = Players
		 10000-10063 = Spectating/Disconnected Players
		 2050-2081 = Teleporter Projectiles
		 3000-3031 = Teleporter Portals
		 3400 - 3463 = Illusionist Decoys
		 3600 - 3663 = Translocators

/* ************************************************** */
/*               START UNIVERSAL SCRIPTS              */
/* ************************************************** */

bool classInfoOn;

Script "HNS_ClassDescriptionOn" (int class)
{
	SetHudSize (640, 480, 1);
	SetFont("HUDDESC");
	HudMessage (s: "A";HUDMSG_PLAIN,9900,CR_UNTRANSLATED,320.0,240.0,5.0);
}

Script "HNS_ClassDescriptionOff" (void)
{
	HudMessage(s:""; 0, 9900, 0, 0, 0, 0);
}

Script "hudTimer" open //Timer
{	
	if (GetCVar("timelimit") == 0) { Terminate; }
	int Time = GetCVar("hns_timelimitseconds");
	Time--;
	Until(Time == 0)
	{
		SetFont("BIGFONT");
		if (Time <= 60)
			HudMessageBold(s:"Round Ends In: \cg", d:Time/60, s:":", d:(Time%60)/10, d:Time%10; HUDMSG_PLAIN, 2, CR_WHITE, 0.03, 0.85, 3.5);
		else if (Time > 60 && Time <= 180)
			HudMessageBold(s:"Round Ends In: \ck", d:Time/60, s:":", d:(Time%60)/10, d:Time%10; HUDMSG_PLAIN, 2, CR_WHITE, 0.03, 0.85, 3.5);
		else if (Time > 180)
			HudMessageBold(s:"Round Ends In: \cd", d:Time/60, s:":", d:(Time%60)/10, d:Time%10; HUDMSG_PLAIN, 2, CR_WHITE, 0.03, 0.85, 3.5);
		delay(35);
		Time--;
		
	}
	for(int i=0;i<MAXPLAYERS;i++)
	{
		SetFont("BIGFONT");
		HudMessageBold(s:"Round Ends In: \cm0:00"; HUDMSG_PLAIN, 2, CR_WHITE, 0.03, 0.85, 5);
		if(pteam[i]==1) thing_damage(PLAYER_BASE_TID+i,999,0);
	}
}

script "playerEnter" enter //Sets TIDs, HUD Scaling for our custom HUD, and executes the scripts!!
{
	thing_changetid(0,playernumber()+PLAYER_BASE_TID);
	pteam[playernumber()]=playerteam();
	ACS_NamedExecuteAlways("scriptInitializations", 0);
}

script "playerRespawn" respawn //Sets TIDs, HUD Scaling for our custom HUD, and executes the scripts!!
{
	thing_changetid(0,playernumber()+PLAYER_BASE_TID);
	pteam[playernumber()]=playerteam();
	ACS_NamedExecuteAlways("scriptInitializations", 0);
}

//so we don't have to be redundant
script "scriptInitializations" (void)
{
	ACS_NamedExecuteAlways("jetpackSetup",0);
	delay(1);
	ACS_NamedExecuteAlways("radarSetup", 0); //Scouter Jetpack
	delay(1);
	ACS_NamedExecuteAlways("vanishingSetup",0);
	delay(1);
	ACS_NamedExecuteAlways("VanishHandling",0);
	delay(1);
	Acs_NamedExecuteAlways("chargeableJump",0); //guardian jump setup
	delay(1);
	Acs_NamedExecuteAlways("doubleJump",0); //hunter jump setup
	delay(1);
	ACS_NamedExecuteAlways("decoyFireHandling",0);
	delay(1);
	ACS_NamedExecuteAlways("decoyAltHandling",0);
	delay(1);
	ACS_NamedExecuteAlways("wallClimbing",0);
	delay(1);
	ACS_NamedExecuteAlways("crouchDiving",0);
	delay(1);
	ACS_NamedExecuteAlways("airDodging",0);
	delay(1);
	ACS_NamedExecuteAlways("crouchSliding",0);
	delay(1);
	ACS_NamedExecuteAlways("strafeJumping",0);
	delay(1);
}

Script "playerDisconnect" (int gone) disconnect
// Hopefully gets rid of anyone trying to abuse scripts when spectating
{
	Thing_ChangeTID(gone, 10000+gone);
}

Script "playerDeath" death
//Should change the TID of anyone who freakin' died.
{
	Thing_ChangeTID(PLAYER_BASE_TID+PlayerNumber(), 10000+PlayerNumber());
}

/* ************************************************** */
/*  END UNIVERSAL SCRIPTS ; */
/* ************************************************** */

/* ************************************************** */
/* START CLASS SPECIFIC SHIT */
/* ************************************************** */


Script 109 respawn CLIENTSIDE
//Information on player class upon spawning!
{
	if(consoleplayernumber() != playernumber()) terminate;
	
	if(PlayerClass(PlayerNumber())==1) //Banshee
    {
        HudMessage(s:"\ccCLASS : \cuBanshee\n\n\ccWEAPONS : \crRejuvinator"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 7.0);
    }
    if(PlayerClass(PlayerNumber())==2) //Blazer
	{
		HudMessage(s:"\ccCLASS : \cuBlazer\n\n\ccWEAPONS : \crNone\n\ccABILITY : \ciExtreme Speed \cc( \cdRun Around! \cc)"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 7.0);
	}
	if(PlayerClass(PlayerNumber())==5) //Rocketeer
	{
		HudMessage(s:"\ccCLASS : \cuRocketeer\n\n\ccWEAPONS : \crNo-Damage Rocket Launcher\n\ccABILITY : \ciRocket Jumping \cc( \cdJump + Fire At Ground \cc)\n\ccABILITY : \ciAmmo Regen \cc( \cdStand Still to Regen \cc)"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 7.0);
	}
	if(PlayerClass(PlayerNumber())==6) //Teleporter
	{
		HudMessage(s:"\ccCLASS : \cuTeleporter\n\n\ccWEAPONS : \crAutomatic-Relocation Transmission Rifle\n\ccABILITY : \ciRadiation Shield \cc( \cdNo melty-melty! \cc)\n\ccABILITY : \ciAmmo Regen \cc( \cdStand Still to Regen \cc)"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 7.0);
	}
	if(PlayerClass(PlayerNumber())==7) //Hunter
	{
		HudMessage(s:"\ccCLASS : \ckHunter\n\n\ccWEAPONS : \crCombat Shotgun \cc, \crRapid-Fire Chaingun\n\ccABILITY : \ciAmmo Regen \cc( \cdStand Still to Regen \cc)"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 7.0);
	}
	if(PlayerClass(PlayerNumber())==8) //Scouter
	{
		HudMessage(s:"\ccCLASS : \ckScouter\n\n\ccWEAPONS : \crRail Pistol \cc, \crCombat Knife\n\ccABILITY : \ciRadar \cc( \cdLocate Hiders within a short radius \cc)\n\ccABILITY : \ciJetpack \cc( \cdDouble-Jump to enable \cc)\n\ccABILITY : \ciAmmo Regen \cc( \cdStand Still to Regen \cc)"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 7.0);
	}
	if(PlayerClass(PlayerNumber())==9) //Berserker
	{
		HudMessage(s:"\ccCLASS : \ckBerserker\n\n\ccWEAPONS : \crMighty Fists\n\ccABILITY : \ciDrug-Induced Insane Speed \cc( \cdRun Around! \cc)\n\ccABILITY : \ciScream Loudly \cc( \cdAAAAAAAHHHHHHHHH \cc)"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 7.0);
	}
	if(PlayerClass(PlayerNumber())==10) //Terminator
	{
		HudMessage(s:"\ccCLASS : \ckTerminator\n\n\ccWEAPONS : \crPlasma Rifle \cc, \crFragmentation Grenades\n\ccABILITY : \ciGrenade Throw Strength \cc( \cdHold Down Fire Button To Charge \cc)\n\ccABILITY : \ciPlasma Rifle Ammo Regen \cc( \cdStand Still to Regen \cc)"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 7.0);
	}
}