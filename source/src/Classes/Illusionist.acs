#library "Illusionist"
#include "DEFINITIONS.acs"

script "IllusionistFirstAbility" (int cooldownTime) NET
{
	if (CheckInventory("IllusionistFirstActive"))
	{
		ACS_NamedExecuteAlways("endDisguise", 0, cooldownTime);
		terminate;
	}
	
	int seekerClass = Random(6,11);
	GiveInventory("IllusionistFirstActive", 1);
	GiveInventory(StrParam(s:classNames[seekerClass], s:"Morph"), 1);
	PlaySound(0, "Illusionist/Abilities/Morph");
	ACS_NamedExecuteAlways("hudDisguise", 0, StrParam(s:classNames[seekerClass], s:"Morph"), cooldownTime);
}

script "hudDisguise" (int seekerClass, int cooldownTime) CLIENTSIDE
{
	HudMessage(s:"You've morphed into a ", s:seekerClass; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
	
	For (int x = 60; x > 0; x--)
	{
		HudMessage(s:"Disguise lasts for ", d:x, s:" more seconds"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
		Delay(35);
		if (!CheckInventory("IllusionistFirstActive"))
			terminate;
	}
	ACS_NamedExecuteAlways("endDisguise", 0, cooldownTime);
}

script "endDisguise" (int cooldownTime) NET
{
	str morphClass = morphName();
	TakeInventory(morphClass, 1);
	TakeInventory("IllusionistFirstActive", 1);
	ACS_NamedExecuteAlways("unmorphHud", 0);
	PlaySound(0, "Illusionist/Abilities/Morph");
	ACS_NamedExecuteAlways("activateCooldown", 0, "IllusionistFirstCooldown", cooldownTime);
}

function str morphName(void) 
{
	for (int x = SEEKER_CLASS_START; x <= SEEKER_CLASS_END; x++)
		if (CheckInventory(StrParam(s:classNames[x], s:"Morph")))
			str morphClass = StrParam(s:classNames[x], s: "Morph");
	
	return morphClass;
}

script "IllusionistSecondAbility" (int cooldownTime) NET
{
	if (CheckInventory("IllusionistSecondActive"))
	{	
		ACS_NamedExecuteAlways("endShrink", 0, cooldownTime);
		terminate;
	}
		GiveInventory("ShrinkMorph", 1);
		GiveInventory("IllusionistSecondActive", 1);
		PlaySound(0, "Illusionist/Abilities/Shrink", 6);
		ACS_NamedExecuteAlways("hudShrink", 0, cooldownTime);
}

script "hudShrink" (int cooldownTime) CLIENTSIDE
{
	For (int x = 15; x > 0; x--)
	{
		HudMessage(s:"shrunken state lasts for ", d:x, s:" more seconds"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
		Delay(35);
		if (!CheckInventory("IllusionistSecondActive"))
			terminate;
	}
	ACS_NamedExecuteAlways("endShrink", 0, cooldownTime);
}

script "endShrink" (int cooldownTime) NET
{
	TakeInventory("ShrinkMorph", 1);
	TakeInventory("IllusionistSecondActive", 1);
	ACS_NamedExecuteAlways("unmorphHud", 0);
	PlaySound(0, "Illusionist/Abilities/Unshrink", 6);
	ACS_NamedExecuteAlways("activateSecondaryCooldown", 0, "IllusionistSecondCooldown", cooldownTime);
}

script "unmorphHud" (void) CLIENTSIDE
{
	HudMessage(s:"Morphed back to normal"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
}
