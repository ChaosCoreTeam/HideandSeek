#library "Banshee"
#include "DEFINITIONS.acs"
#import "FUNCTION.acs"

#define BANSHEE_HEAL_RADIUS 96.0
#define BANSHEE_HEAL_AMOUNT 25

script "bansheeFirstAbility" (int cooldownTime)
{
	if(GetActorProperty(0, APROP_Health) == 100)
	{
		HudMessage(s:"Self preservations systems failed, you're already at max health"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
		terminate;
	}
	GiveInventory("BansheeFirstActive", 1);
	ACS_NamedExecute("bansheeHeal", 0, cooldownTime);
}

script "bansheeHeal" (int cooldownTime) CLIENTSIDE
{
	while(CheckInventory("BansheeFirstActive"))
	{
		if(CheckInventory("HealingEnergy"))
		{
			HudMessage(s:"Healing..."; HUDMSG_PLAIN, 7, -1, 1.5, 0.65, 3.5, 3.0);
			PlaySound(0, "Banshee/Abilities/LifeSupport", 6);
			TakeInventory("HealingEnergy", 3);
			HealThing(3);
			int currentHealth = GetActorProperty(0, APROP_Health) + 3;
		}
		else
			HudMessage(s:"Out of healing energy"; HUDMSG_PLAIN, 7, -1, 1.5, 0.65, 3.5, 3.0);
			TakeInventory("BansheeFirstActive", 1);
			break;
		if(GetActorProperty(0, APROP_Health) == 100)
			HudMessage(s:"Fully healed"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
			TakeInventory("BansheeFirstActive", 1);
			break;
		Delay(12);
		if(GetActorProperty(0, APROP_HEALTH) <= currentHealth)
		{
			HudMessage(s:"Self preservation systems interupted"; HUDMSG_PLAIN, 7, -1, 1.5, 0.65, 3.5, 3.0);
			TakeInventory("BansheeFirstActive", 1);
			break;
		}
		Delay(6);
	}
	ACS_NamedExecuteAlways("activateCooldown", 0, cooldownTime);
}

script "bansheeAltFireHeal" (void)
{
	int healerTid = PLAYER_BASE_TID + PlayerNumber();

	for (int p = 0; p < MAXPLAYERS; p++)
	{
		if (p == PlayerNumber())
			continue;
			
		int targetTid = PLAYER_BASE_TID + p;
		if (CheckActorInventory(targetTid, "isSeeker"))
			continue;
		
		if (fixedDistance(healerTid, targetTid) >= BANSHEE_HEAL_RADIUS)
			continue;
		
		int currentHealth = GetActorProperty(targetTid, APROP_HEALTH);
		int healthToGive = min(100 - currentHealth, BANSHEE_HEAL_AMOUNT);
		if (healthToGive > 0)
			GiveActorInventory(targetTid, "HealthBonus", healthToGive);
	}
}

script "bansheeSecondAbility" (int cooldownTime)
{
	If (!CheckInventory("HealingEnergy" < 50))
	{
		HudMessage(s:"Not enough energy for Life Support"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
		terminate;
	}
	TakeInventory("HealingEnergy", 50);
	GiveInventory("BansheeSecondActive", 1);
	GiveInventory("LifeSupport", 1);
	PlaySound(0, "Banshee/Abilities/LifeSupport", 6);
	While (CheckInventory("BansheeSecondActive"))
	{
		ACS_NamedExecute("lifeHud", 0);
	}
	TakeInventory("LifeSupport", 1);
	PlaySound(0, "Banshee/Abilities/LifeSupportOff", 6);
	ACS_NamedExecute("activateSecondaryCooldown", 0, "BansheeSecondCooldown", cooldownTime);
}

script "lifeHud" (void) ClientSide
{
	
	
}