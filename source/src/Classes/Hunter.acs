#library "Hunter"
#include "DEFINITIONS.acs"

script "HunterFirstAbility" (int cooldownName) NET
{
	GiveInventory("HunterFirstActive", 1);
	While (CheckInventory("HunterFirstActive"))
	{
		GiveInventory("DualHunter", 1);
		PlaySound(0, "Hunter/Abilities/DualWeapons");
		ACS_NamedExecute("hudDual", 0);
	}
	TakeInventory("DualHunter", 1);
	PlaySound(0, "Hunter/Abilities/LoseDual");
	ACS_NamedExecute("activateCooldown", 0, "HunterFirstCooldown", cooldownName);
}

script "hudDual" (void) NET
{
	For (int x = 10; x > 0; x--)
	{
		HudMessage(s:"Dual Weapons lasts for", d:x, s:" more seconds"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
		Delay(35);
	}
	TakeInventory("HunterFirstActive", 1);
}

script "HunterSecondAbility" (int cooldownName) NET
{
	GiveInventory("HunterSecondActive", 1);
	While (CheckInventory("HunterSecondActive"))
	{
		GiveInventory("Freezegun", 1);
		PlaySound(0, "Hunter/Abilities/Freezegun", 6);
		ACS_NamedExecute("hudFreeze", 0);
	}
	TakeInventory("FreezeGun", 1);
	PlaySound(0, "Hunter/Abilities/LoseFreeze", 6);
	ACS_NamedExecute("activateSecondaryCooldown", 0, cooldownName);
}

script "hudFreeze" (void) NET
{
	For (int x = 5; x > 0; x--)
	{
		HudMessage(s:"Freezegun lasts for ", d:x, s:" more seconds"; HUDMSG_FADEOUT, 7, -1, 1.5, 0.65, 3.5, 3.0);
		Delay(35);
	}
	TakeInventory("HunterSecondActive", 1);
}